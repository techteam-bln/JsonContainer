package org.vaadin.teemu.jsoncontainer;

import java.util.Map.Entry;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.vaadin.data.Item;
import com.vaadin.data.util.IndexedContainer;

/**
 * Simple JsonContainer implementation that is based on {@link IndexedContainer}
 * from core Vaadin.
 */
@SuppressWarnings("serial")
class IndexedJsonContainer extends IndexedContainer implements JsonContainer {

    IndexedJsonContainer(JsonElement parsedJsonData) {
        if (parsedJsonData.isJsonArray()) {
            populateContainer(parsedJsonData.getAsJsonArray());
        } else if (parsedJsonData.isJsonObject()) {
            addJsonObject(parsedJsonData.getAsJsonObject());
        }
    }

    private void populateContainer(JsonArray parsedJsonArray) {
        for (JsonElement j : parsedJsonArray) {
            if (j.isJsonObject()) {
                addJsonObject(j.getAsJsonObject());
            }
        }
    }

    private void addJsonObject(JsonObject jsonObject) {
        // use itemId generated by IndexedContainer
        Object itemId = addItem();
        Item i = getItem(itemId);

        for (Entry<String, JsonElement> entry : jsonObject.entrySet()) {
            addContainerProperty(entry.getKey(), String.class, null);
            i.getItemProperty(entry.getKey()).setValue(
                    entry.getValue().getAsString());
        }
    }

}
